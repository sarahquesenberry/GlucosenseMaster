@page
@model GlucoSmart.Pages.GlucoseChartModel
@{
    ViewData["Title"] = "Glucose Chart";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
    <body>
        @if (User.IsInRole("Doctor"))
        {
            <a href="/Entries/Glucose/Index?username=@Model.Username">View As Table</a>
        }
        @if (User.IsInRole("Patient"))
        {
            <a href="/Entries/Glucose/Index">View As Table</a>
        }
        <div class="container">
            <div class="row d-flex justify-content-center mt-5">
                <div class="col-md-10">
                    <canvas id="breakfastChart"></canvas>
                </div>
            </div>
            <div class="row d-flex justify-content-center mt-5">
                <div class="col-md-10">
                    <canvas id="lunchChart"></canvas>
                </div>
            </div>
            <div class="row d-flex justify-content-center mt-5">
                <div class="col-md-10">
                    <canvas id="dinnerChart"></canvas>
                </div>
            </div>
        </div>

        <script type="text/javascript" src="~/js/jquery-3.4.1.min.js"></script>
        <script type="text/javascript" src="~/js/popper.min.js"></script>
        <script type="text/javascript" src="~/js/bootstrap.min.js"></script>
        <script type="text/javascript" src="~/js/mdb.min.js"></script>

        <script>
        var ctxL = document.getElementById("breakfastChart").getContext("2d");
        var gradientFill = ctxL.createLinearGradient(0, 0, 0, 290)
        gradientFill.addColorStop(0, "rgba(173, 53, 186, 1)");
        gradientFill.addColorStop(1, "rgba(173, 53, 186, 0.1)");
        var preReadings, postReadings, dates;
        preReadings = @Html.Raw(Json.Serialize(Model.BreakfastPreReadings.ToArray()));
        postReadings = @Html.Raw(Json.Serialize(Model.BreakfastPostReadings.ToArray()));
        dates = @Html.Raw(Json.Serialize(Model.BreakfastDates.ToArray()));

        var myLineChart = new Chart(ctxL, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: "Breakfast PreMeal Readings",
                    data: preReadings,
                    backgroundColor: 'rgba(105, 0, 132, .2)',
                    borderColor: [
                        'rgba(200, 99, 132, .7)',
                    ],
                    borderWidth: 2
                },

                {
                    label: "Breakfast PostMeal Readings",
                    data: postReadings,
                    backgroundColor: [
                        'rgba(0, 137, 132, .2)'
                    ],
                    borderColor: [
                        'rgba(0, 10, 130, .7)'
                    ],
                    borderWidth: 2

                }]
            },
            options: {
                responsive: true
            }
        });
        </script>

        <script>
        var ctxL = document.getElementById("lunchChart").getContext("2d");
        var gradientFill = ctxL.createLinearGradient(0, 0, 0, 290)
        gradientFill.addColorStop(0, "rgba(173, 53, 186, 1)");
        gradientFill.addColorStop(1, "rgba(173, 53, 186, 0.1)");
        var preReadings, postReadings, dates;
        preReadings = @Html.Raw(Json.Serialize(Model.LunchPreReadings.ToArray()));
        postReadings = @Html.Raw(Json.Serialize(Model.LunchPostReadings.ToArray()));
        dates = @Html.Raw(Json.Serialize(Model.LunchDates.ToArray()));

        var myLineChart = new Chart(ctxL, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: "Lunch PreMeal Readings",
                    data: preReadings,
                    backgroundColor: 'rgba(105, 0, 132, .2)',
                    borderColor: [
                        'rgba(200, 99, 132, .7)',
                    ],
                    borderWidth: 2
                },

                {
                    label: "Lunch PostMeal Readings",
                    data: postReadings,
                    backgroundColor: [
                        'rgba(0, 137, 132, .2)'
                    ],
                    borderColor: [
                        'rgba(0, 10, 130, .7)'
                    ],
                    borderWidth: 2

                }]
            },
            options: {
                responsive: true
            }
        });
        </script>

        <script>
        var ctxL = document.getElementById("dinnerChart").getContext("2d");
        var gradientFill = ctxL.createLinearGradient(0, 0, 0, 290)
        gradientFill.addColorStop(0, "rgba(173, 53, 186, 1)");
        gradientFill.addColorStop(1, "rgba(173, 53, 186, 0.1)");
        var preReadings, postReadings, dates;
        preReadings = @Html.Raw(Json.Serialize(Model.DinnerPreReadings.ToArray()));
        postReadings = @Html.Raw(Json.Serialize(Model.DinnerPostReadings.ToArray()));
        dates = @Html.Raw(Json.Serialize(Model.DinnerDates.ToArray()));

        var myLineChart = new Chart(ctxL, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: "Dinner PreMeal Readings",
                    data: preReadings,
                    backgroundColor: 'rgba(105, 0, 132, .2)',
                    borderColor: [
                        'rgba(200, 99, 132, .7)',
                    ],
                    borderWidth: 2
                },

                {
                    label: "Dinner PostMeal Readings",
                    data: postReadings,
                    backgroundColor: [
                        'rgba(0, 137, 132, .2)'
                    ],
                    borderColor: [
                        'rgba(0, 10, 130, .7)'
                    ],
                    borderWidth: 2

                }]
            },
            options: {
                responsive: true
            }
        });
        </script>
    </body>

